# Dmitry Kankalovich, 2011

#Login DAO
SQL_GET_USER = SELECT * FROM users WHERE login = ? AND password = ?
SQL_GET_USER_BY_UID = SELECT * FROM users WHERE uid = ?

#ADMINISTRATOR DAO
SQL_ADD_FILM = INSERT INTO films(name, year, country, genre, duration, details, price) VALUES (?, ?, ?, ?, ?, ?, ?)
SQL_UPDATE_ORDER_STATUS = UPDATE orders SET status = ? WHERE oid = ?
SQL_DELETE_FILM = DELETE FROM films WHERE fid = ?
SQL_UPDATE_FILM = UPDATE films SET name = ?, year = ?, country = ?, genre = ?, duration = ?, details = ?, price = ? WHERE fid = ?
SQL_GET_ALL_USERS = SELECT * FROM users;
SQL_SET_ACCESS_LEVEL = UPDATE users SET accesslevel = ? WHERE uid = ?

#FILMS DAO
SQL_GET_ALL_FILMS = SELECT * FROM films
SQL_GET_FILM_BY_ID = SELECT * FROM films WHERE fid = ?
SQL_GET_FILMS_BY_GENRE = SELECT * FROM films WHERE genre LIKE ? ORDER BY year DESC
SQL_SEARCH_FILM = SELECT * FROM films WHERE genre LIKE ? OR year = ? OR name LIKE ?
SQL_COUNT_FILMS = SELECT COUNT(*) FROM films

#ORDERS DAO
SQL_GET_ALL_ORDERS = SELECT * FROM orders ORDER BY oid DESC
SQL_GET_ORDERS_BY_UID = SELECT * FROM orders WHERE uid = ? ORDER BY oid DESC
SQL_GET_ORDERS_BY_NAME = SELECT * FROM orders INNER JOIN users WHERE (orders.uid = users.uid) AND (users.surname = ?) ORDER BY oid DESC
SQL_GET_ORDERS_BY_STATUS = SELECT * FROM orders WHERE status = ?

#USER DAO
SQL_ADD_ORDER = INSERT INTO orders(uid, fid, phone, address, details) VALUES (?, ?, ?, ?, ?)
SQL_ADD_USER = INSERT INTO users(name, surname, login, password, email, phone) VALUES (?, ?, ?, ?, ?, ?)
SQL_GET_ACCESS_LEVEL = SELECT accesslevel FROM users WHERE uid = ?
#SQL_CHECK_LOGIN = SELECT uid FROM users WHERE login = ?

#PERSON DAO
SQL_ADD_PERSON = INSERT INTO person(name, surname, login, password, role) VALUES (?, ?, ?, ?, ?)
SQL_CHECK_LOGIN = SELECT id FROM person WHERE login = ?

#LOGIN DAO
SQL_CHECK_PERSON = SELECT * FROM person WHERE (login = ?) AND (password = ?)

#CREDITCARD DAO
SQL_CHECK_SECURITYCODE = SELECT id FROM creditcard WHERE securitycode = ?
SQL_ADD_CREDITCARD = INSERT INTO creditcard (name, securitycode, Person_id) VALUES (?, ?, ?)

#ACCOUNT DAO
SQL_ADD_ACCOUNT = INSERT INTO account (count, CreditCard_id, status) VALUES (?, ?, ?)
SQL_CHECK_ACCOUNT = SELECT creditcard.id FROM creditcard WHERE creditcard.securitycode = ?
#SQL_UPDATE_STATUS = UPDATE account SET status = 2 WHERE (creditcard.securitycode = ?) AND (creditcard.id = account.CreditCard_id)
SQL_UPDATE_STATUS = UPDATE account INNER JOIN creditcard ON creditcard.id = account.CreditCard_id SET account.status = 2 WHERE creditcard.securitycode = ?
SQL_SELECT_ACCOUNT = SELECT account.id FROM account, creditcard WHERE (creditcard.id = account.CreditCard_id) AND (creditcard.securitycode = ?)
SQL_SELECT_USER_ACCOUNT = SELECT creditcard.name, creditcard.securitycode, account.count, account.status FROM creditcard, account, person WHERE (person.id = creditcard.Person_id) AND (creditcard.id = account.CreditCard_id) AND (person.login = ?)

#TRANSACTION DAO
SQL_INSERT_TRANSACTION = INSERT INTO transactions(sum, Account_id) VALUES (?, ?) 
SQL_UPDATE_COUNT = UPDATE account SET account.count = (account.count + ?) WHERE account.id = ?